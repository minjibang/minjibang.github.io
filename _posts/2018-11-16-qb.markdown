---
title:  "QB(Questionnaire Bank)"
date:   2018-11-22 15:04:23
categories: [project]
tags: [Spring]
---

‘QBQB’ 는 교육기관에서 활용되는 문제, 시험, 성적 관리 시스템으로,<br>
현재 종이로 이루어지는 시험 응시 과정과 수동으로 작업되는 문제 출제 및 채점 과정, <br>
성적 관리 업무를 전산화 하여 교육기관의 업무 효율 뿐 아니라 정확성 또한 높이도록 설계되었습니다.<br>
<br>
문제 은행, 시험응시, 자동 채점, 학생 및 성적관리, 성적 통계 자료 생성 및 문서화 서비스를 제공합니다.<br>

<img src="{{site.baseurl}}/images/finalmainp.png"/>

<p style="font-size:13pt;">[FRONT-END]</p>
* HTML5, CSS3, JavaScript, JSP, Bootstrap3, jQuery-UI, Ajax, SweetAlert, Chart-JS, <br>
Velocity, DataTables, Google Map, Q-net 자격증정보 공공데이터 API, JavaMail API, COOL-SMS, SUMMERNOTE, Full-calendar<br><br>

<p style="font-size:13pt;">[BACK-END]</p>
* Java, Spring Framework, Maven, mybatis, Tiles, Web Socket, Spring Security<br><br>


<p style="font-size:13pt;">[SERVER]</p>
* Apache Tomcat 9, AWS, UBUNTU<br><br>


<p style="font-size:13pt;">[DataBase]</p>
* MariaDB

* 형상관리: Github, Google Drive
* 툴: Spring Tool Suite, HeidiSQL, SourceTree, Exerd, Bracket, Atom, Putty, KakaoOven	<br>

<p style="font-size:13pt;">[담당업무]</p>

* 웹소켓을 이용한 실시간 쪽지알림 기능

<img src="{{site.baseurl}}/images/message.PNG"/>
-쪽지를 받으면 실시간으로 알림이 뜨고, 아이콘을 누르면 간략하게 확인이 가능합니다.<br>
-해당 쪽지를 누르면 쪽지함으로 이동합니다.
<img src="{{site.baseurl}}/images/message2.PNG"/>
-강사는 원하는 학생들에게 쪽지를 보낼 수 있습니다.<br>
-메시지를 websocket server로 보내면 핸들러에서 받는 사람의<br>
session값을 찾아 해당 사용자에게 메시지를 전달합니다.<br>
-websocket을 이용하여 구현했기 때문에 양방향통신이 가능하여 실시간알림이 됩니다.


* 클래스 관리 기능

<img src="{{site.baseurl}}/images/classupdate.PNG"/>
-관리자는 등록되어있는 클래스를 수정할 수 있습니다.<br>
-기존의 정보가 출력되며, 수강기간은 Datepicker를 사용하였습니다.<br>
-메인화면에 출력 되어있는 정보를 jQuery의 자식, 부모 노드를 찾는 방법을 통해<br>
기존의 정보를 모달창에 출력하였습니다.


* 시험일정 등록, 수정, 삭제 기능

<img src="{{site.baseurl}}/images/examregi.PNG"/>
-시험관리페이지에서 무한 스크롤로 페이징 처리를 하였습니다.

<img src="{{site.baseurl}}/images/examregi2.PNG"/>

<img src="{{site.baseurl}}/images/examregi3.PNG"/>
-시험등록페이지에서 시험대상을 선택하고 날짜, 시간 등을 입력합니다.
-기존의 체크되어 있던 학생들을 출력하기 위해 시험응시 학생을 DB에서 값을 가져와<br>
해당 클래스들과 비교하여 시험응시 학생아이디와 클래스 학생 아이디가<br>
같다면 체크가 되어 출력되도록 하였습니다.

* 시험목록 관리

<img src="{{site.baseurl}}/images/examlist.PNG"/>
-시험지 목록을 Ajax를 통해 조회, 검색이 가능합니다.<br>
-목록들은 반복문을 통해 출력하였고 따로 jsp 파일을 만들어 Ajax를 통해 출력되게 하였습니다.<br>
-검색은 제목, 설명으로 검색이 가능합니다.<br>
-Mybatis에서 동적쿼리를 사용하여 해당 카테고리에 대한 검색 결과를 출력하였습니다.<br>

* 시험지 미리보기

<img src="{{site.baseurl}}/images/exammiri.PNG"/>

-시험지 목록에서 미리 보기 버튼을 클릭하면 모달창이 뜹니다.<br>
-버튼에 시험지의 번호를 할당하였고 ajax를 이용하여 시험지 번호를<br>
  파라미터 값으로 넘겨준 뒤, 해당 시험지 번호의 문제들을 가져와서 모달창에 출력했습니다.<br>
-문제는 뷰페이지에서 반복문을 사용하여 테이블로 출력합니다.<br>
-Jstl을 이용하여 status.index를 통해 한 페이지당 6개의 문제가 출력되도록 하였습니다.<br>
-page-break-before:always 속성을 사용하여 프린트 페이징 처리를 하였습니다.


* Google map API

<img src="{{site.baseurl}}/images/googlemap.PNG"/>
-key를 발급받아 위도, 경도를 설정합니다.

* AWS <br>
http://52.78.103.95:8090/qb

-해당 url로 들어가서 확인할 수 있습니다.

[jekyll]:      http://jekyllrb.com
[jekyll-gh]:   https://github.com/jekyll/jekyll
[jekyll-help]: https://github.com/jekyll/jekyll-help
